What happens when you initialize a repository? Why do you need to do it?

-When you initalize a repository, it creates the work environment that you will use to organize your prokect from that point forward. Without initlaizing it, you won't have a workspace.

How is the staging area differnet from the working directory and the repository? What value do you think it offers?

The staging area allows you to move files into it where you can make changes, and then add them to a commit. 
This way if you edit the files, you can go back and see what changes you had made. In the working directory, you cannot do this. 
You can edit the files but that is the most that it can offer. 

How can you use the staging area to make sure you have one commit per logical change?

You can compare the staging area with the last commit and that way you know that the change is valid. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you are trying to a.) make multiple versions of the same product b.) trying something experimental. 
Making branches allows you to try new things without having to worry about messing up your original master code. 

How do the diagrams help you visualize the branch structure?

Drawing them out allows you to see how they are laid out and thus you can use this to understand which commit you are currently working on. This keeps
you from getting confused and helps you understand where you need to go to make necessary changes.

 What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
 
 It combines two branches together allowing more than one person to work on the same code at the same time. We represent it in the diagram because it 
 helps us visualize how the branches/ commits go together. 
 
 
 What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
 
 When you autmotaically merge and there are no conflicts, it makes it more time efficient but the benefit of manually committing something is that it allows you to
 make better decisions on how the code should be organized. It allows you to handle the error the way that you would like to do it. 
